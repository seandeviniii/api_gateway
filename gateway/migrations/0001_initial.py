# Generated by Django 4.2.7 on 2025-09-01 16:05

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Human-readable name for the API key', max_length=100)),
                ('key', models.CharField(help_text='The actual API key', max_length=64, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this API key is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used', models.DateTimeField(blank=True, help_text='Last time this key was used', null=True)),
                ('requests_per_minute', models.IntegerField(default=60, help_text='Maximum requests per minute')),
                ('requests_per_hour', models.IntegerField(default=1000, help_text='Maximum requests per hour')),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Service name (e.g., user-service)', max_length=100, unique=True)),
                ('base_url', models.URLField(help_text='Base URL for the service')),
                ('timeout', models.IntegerField(default=30, help_text='Request timeout in seconds')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this service is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('health_check_path', models.CharField(default='/health', help_text='Health check endpoint', max_length=200)),
                ('health_check_interval', models.IntegerField(default=60, help_text='Health check interval in seconds')),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('is_healthy', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Service Configuration',
                'verbose_name_plural': 'Service Configurations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE'), ('HEAD', 'HEAD'), ('OPTIONS', 'OPTIONS')], max_length=10)),
                ('path', models.CharField(max_length=500)),
                ('query_params', models.TextField(blank=True, null=True)),
                ('headers', models.JSONField(blank=True, default=dict)),
                ('body', models.TextField(blank=True, null=True)),
                ('status_code', models.IntegerField()),
                ('response_time', models.FloatField(help_text='Response time in milliseconds')),
                ('client_ip', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('service_name', models.CharField(blank=True, max_length=100, null=True)),
                ('downstream_url', models.URLField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('is_error', models.BooleanField(default=False)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_logs', to='gateway.apikey')),
            ],
            options={
                'verbose_name': 'Request Log',
                'verbose_name_plural': 'Request Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='gateway_req_timesta_0edd77_idx'), models.Index(fields=['api_key', 'timestamp'], name='gateway_req_api_key_c02df3_idx'), models.Index(fields=['status_code'], name='gateway_req_status__55c407_idx'), models.Index(fields=['service_name'], name='gateway_req_service_eb0b54_idx')],
            },
        ),
    ]
